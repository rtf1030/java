public class Java1117 {

	public static void main(String[] args) {
		/*
		 * 2. while 문
		 * - for문과 동일하나 초기식, 증감식의 위치가 유동적인 반복문
		 *   => 조건식의 위치만 고정되어 있음
		 *   => 초기식은 while 문보다 윗쪽에 위치해야하며
		 *      증감식은 while 문 안쪽에 위치하고, 내부에서의 위치는 변할 수 있음
		 * - 주로 반복 횟수가 정해져 있지 않고, 조건에 따라 변하는 반복문에 사용
		 * - for문과 while문은 100% 상호 변환이 가능
		 * 
		 * < 기본 문법 >
		 * 초기식; // 최소한 while문보다 윗쪽에 위치해야함
		 * 
		 * while(조건식) {
		 * 		// 증감식; // 실행문 위에 올 수도 있고
		 * 
		 * 		// 조건식이 true 일 때 반복 실행할 문장들...
		 * 
		 *		// 증감식; // 실행문 아래에 올 수도 있다
		 * }
		 */
		
		
		// while문을 사용하여 "Hello, World!" 문자열 출력 10번 반복
		int i = 1; // 초기식
		
		while(i <= 10) { // 조건식
			System.out.println(i + " : Hello, World!"); // 반복 실행할 문장
			
			i++; // 증감식
		}
		
		


		// 제어변수 i가 1 ~ 10까지 1씩 증가하면서 i 값 출력(1 2 3 4 5 6 7 8 9 10 출력)
		i = 1;
		
		while(i <= 10) {
			System.out.print(i + " ");
			i++;
		}
		
		


		// 제어변수 i가 1 ~ 10까지 2씩 증가하면서 i 값 출력(1 3 5 7 9 출력)
		i = 1;
		
		while(i <= 10) {
			System.out.print(i + " ");
			i += 2;
		}
		
		

		// 제어변수 i가 2 ~ 10까지 2씩 증가하면서 i 값 출력(2 4 6 8 10 출력)
		i = 2;
		
		while(i <= 10) {
			System.out.print(i + " ");
			i += 2;
		}
		
		

		// 제어변수 i가 10 ~ 1까지 1씩 감소하면서 i 값 출력(10 9 8 7 6 5 4 3 2 1 출력)
		i = 10;
		
		while(i >= 1) {
			System.out.print(i + " ");
			i--;
		}
		
		

		// 제어변수 i가 1 ~ 10까지 1씩 증가하면서 i 값 출력(1 2 3 4 5 6 7 8 9 10 출력)
		// => 증감식의 위치가 달라지면 실행되는 코드도 달라질 수 있다!
		i = 0;
		
		while(i <= 9) {
			i++; // while 문 반복 실행 시 먼저 제어변수를 1 증가시키므로(2부터 시작됨)
			     // 제어변수 i를 1 작은 수로 초기화하고, 조건식을 1 작은 수 만큼 변경해야함
			System.out.print(i + " ");
		}
		
		System.out.println();
		
	}

}















