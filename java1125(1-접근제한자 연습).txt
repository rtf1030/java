public class Java1125 {

	public static void main(String[] args) {
		/*
		 * 캡슐화(Encapsulation) = 은닉성
		 * - 객체 내부의 구조(멤버변수 및 메서드 처리 과정)를 외부로부터 숨기고
		 *   메세지만으로 객체와 통신하도록 하는 것
		 * - 클래스 정의 시 멤버변수를 private 접근제한자를 사용하여 외부 접근을 차단하고
		 *   public 접근제한자가 선언된 Getter/Setter 메서드를 정의하여
		 *   간접적으로 객체 내의 멤버변수에 접근하도록 하는 것
		 * - 이 때, 모든 Getter/Setter 메서드는 누구나 접근 가능하도록 접근제한자 public 을 사용
		 *
		 * 1. Getter 메서드 : 내부 멤버변수 값을 외부로 리턴하는 역할
		 *                  메서드 이름은 getXXX() 형태로 지정(XXX : 리턴할 멤버변수 이름)
		 *                  파라미터는 없고, 리턴타입은 리턴할 멤버변수의 데이터타입으로 지정
		 *   ex) 멤버변수 name 에 대한 Getter 메서드명 : public String getName() {}
		 * 2. Setter 메서드 : 외부로부터 전달받은 값을 내부 멤버변수에 저장하는 역할
		 *                  메서드 이름은 setXXX() 형태로 지정(XXX : 데이터를 저장할 멤버변수 이름)
		 *                  파라미터는 전달받을 데이터의 데이터타입을 지정
                 *                  리턴값은 없으므로 void 지정
		 *   ex) 멤버변수 name 에 대한 Setter 메서드명 : public void setName(String name) {}
		 * - Getter/Setter 자동 생성 단축키 : Alt + Shift + S -> R
		 *     
		 */
	
	
	Animal3 ani = new Animal3();
		
	
	ani.setName("멍멍이");
	ani.setAge(3);
	
	
	System.out.println("이름 :" + ani.getName());
	System.out.println("나이 :" + ani.getAge());
	}
}

class Animal3{
	private String name; 
	private int age;
	
	
	public String getName() {
		return name;
	}
	
	
	public void setName(String newName) {
		
		name=newName;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int newAge) {
		age=newAge;
	}	
}












