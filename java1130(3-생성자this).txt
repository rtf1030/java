
public class JAVA1130_3 {

	public static void main(String[] args) {
		/*
		 * this 키워드
		 * 2. 생성자 this()
		 *    - 하나의 생성자에서 자신의 클래스 내의 또 다른 생성자를 호출하는 코드
		 *    - 생성자 오버로딩 수행할 경우 멤버변수 초기화 코드가 중복될 수 있다!
		 *      => 따라서, 코드 중복을 제거하기 위해 하나의 생성자에 작업 처리 코드를 기술하고
		 *         다른 생성자에서는 해당 생성자를 호출하여 데이터만 전달한 뒤
		 *         간접적으로 멤버변수를 초기화하도록 한다! => 중복 제거됨
		 *    - this() 형식으로 호출하며, 생성자에 전달할 파라미터를 소괄호() 안에 기술
		 *      => 해당 파라미터 타입 및 갯수와 일치하는 생성자가 호출됨
		 *    - 주의사항! 생성자 this() 는 생성자 내에서 반드시 첫 문장으로 실행되어야 한다!
		 *      (주석은 제외)
		 *  
		 * < 기본 문법 >
		 * [public] 클래스명([매개변수...]) {
		 * 		this(파라미터...); // 해당 파라미터 타입 및 갯수와 일치하는 생성자가 호출됨
		 * }
		 *     
		 */
		
		Person4 p = new Person4();
		System.out.println("이름 : " + p.name);
		System.out.println("나이 : " + p.age);
		System.out.println("-----------------");
		
		Person4 p2 = new Person4("이순신");
		System.out.println("이름 : " + p2.name);
		System.out.println("나이 : " + p2.age);
		System.out.println("-----------------");
		
		Person4 p3 = new Person4("이순신", 44);
		System.out.println("이름 : " + p3.name);
		System.out.println("나이 : " + p3.age);
		
	}

}

class Person4 {
	String name;
	int age;
	
	// 기본 생성자 정의
	public Person4() {
//		System.out.println("Person4() 생성자 호출됨!");
		// => 주의! 생성자 this() 를 사용하는 경우 다른 코드가 
		//    생성자 this() 코드보다 위에 올 수 없다!
		//    = 생성자 this() 는 생성자 내에서 무조건 첫번째 문장으로 실행되어야 한다!
		
//		name = "홍길동";
//		age = 20;
		
		// Person4(String, int) 생성자 호출
//		Person4("홍길동", 20); // 오류 발생
		// 생성자가 아닌 메서드 호출 코드로 인식되어 없는 메서드를 호출하는 코드가 됨
		
		// 생성자 사용 시 주의사항!
		// 생성자는 new 키워드와 함께 사용하는 방법 외엔 생성자 이름을 호출할 수 없다!
		// => 생성자 이름 대신 생성자 this() 를 사용하면 다른 생성자 호출이 가능하다!
		this("홍길동", 20); // Person4(String, int) 생성자가 호출됨
		
		// 출력문 등의 다른 코드는 생성자 this() 보다 아래쪽에 위치해야한다!
		// => 다른 생성자를 호출하여 작업을 수행한 뒤 생성자 this() 아래쪽 코드가 실행됨!
		System.out.println("Person4() 생성자 호출됨!");
	}

	// 생성자 오버로딩을 통한 파라미터 생성자 정의
	// 이름을 전달받아 초기화하는 생성자 정의(나이는 임의의 값으로 초기화)
	public Person4(String name) {
//		this.name = name;
//		age = 20;
		
		this(name, 20); // Person4(String, int) 생성자가 호출됨
		System.out.println("Person4(String) 생성자 호출됨!");
	}

	// 이름, 나이를 전달받아 초기화하는 생성자 정의
	// => 다른 생성자로부터 파라미터를 전달받아 모든 초기화를 수행하는 생성자
	public Person4(String name, int age) {
		// 생성자 this() 가 없으므로 출력문이 어디에 오든 상관없다!
		System.out.println("Person4(String, int) 생성자 호출됨!");
		this.name = name;
		this.age = age;
	}
	
	
}










