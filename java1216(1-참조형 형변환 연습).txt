
public class Test {

	public static void main(String[] args) {
		// 업캐스팅과 다운캐스팅 연습
		// 서브클래스(스마트폰) 타입 인스턴스 생성
		스마트폰 갤럭시노트 = new 스마트폰();
		// 서브클래스 타입으로 참조 가능한 메서드 : 3개(전화, 문자, 카톡)
		갤럭시노트.전화();
		갤럭시노트.문자();
		갤럭시노트.카톡();
		
		// 슈퍼클래스(핸드폰) 타입 인스턴스 생성
		핸드폰 어머니폰 = new 핸드폰();
		// 슈퍼클래스 타입으로 참조 가능한 메서드 : 2개(전화, 문자)
		어머니폰.전화();
		어머니폰.문자();
		
		System.out.println("-----------------------------------");
		
		// 업캐스팅(스마트폰 -> 핸드폰)의 예
		// 스마트폰(갤럭시노트)을 어머니께 드리는 경우
		어머니폰 = 갤럭시노트; // 업캐스팅 = 자동 형변환 가능(별도의 형변환 연산자 필요없음)
		// 어머니(슈퍼클래스 타입)가 사용 가능한 기능 : 2개(참조 영역 축소됨)
		어머니폰.전화(); // 핸드폰에서 사용 가능한 기능
		어머니폰.문자(); // 핸드폰에서 사용 가능한 기능
		
//		어머니폰.카톡(); // 스마트폰에서 사용 가능한 기능(핸드폰에서 사용 불가능한 기능)
		// => 슈퍼클래스 타입에 정의되어 있지 않으므로 접근 불가(보이지 않음)
		
		
		// 만약, 동생의 스마트폰(아이폰)을 어머니께 드리는 경우
		스마트폰 아이폰 = new 스마트폰();
		어머니폰 = 아이폰; // 업캐스팅
		// 어머니가 사용 가능한 기능 : 2개
		어머니폰.전화();
		어머니폰.문자();
		
		System.out.println("-----------------------------------");
		
		// 다운캐스팅(핸드폰 -> 스마트폰)의 예
		// 어머니께 새 스마트폰을 사드렸을 경우
		어머니폰 = new 스마트폰(); // 스마트폰 -> 핸드폰으로 업캐스팅
		// 참조 가능한 영역의 축소로 사용 가능한 기능 3개 -> 2개로 줄어듦
		어머니폰.전화();
		어머니폰.문자();
//		어머니폰.카톡(); // 사용 불가
		
		// 어머니의 스마트폰을 내가 가져다 쓰는 경우
//		스마트폰 내폰 = 어머니폰; // 자동 형변환 불가능 => 명시적 형변환 필수!
		스마트폰 내폰 = (스마트폰)어머니폰;
		// 스마트폰을 내가 받아서 사용할 경우 다운캐스팅으로 인해 참조 가능한 영역이 확대됨
		// => 이전에 이미 업캐스팅 된 스마트폰을 다시 다운캐스팅하므로 안전하다!
		내폰.전화();
		내폰.문자();
		내폰.카톡();
		
		
	}

}

class 전화기 {
	public void 전화() {
		System.out.println("전화 걸기!");
	}
}

class 핸드폰 extends 전화기 {
	public void 문자() {
		System.out.println("문자 전송!");
	}
}

class 스마트폰 extends 핸드폰 {
	public void 카톡() {
		System.out.println("카톡 메세지 전송!");
	}
}











